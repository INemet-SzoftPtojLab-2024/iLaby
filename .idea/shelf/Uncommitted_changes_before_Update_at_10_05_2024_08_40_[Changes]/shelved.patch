Index: src/main/java/org/entities/player/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main.java.org.entities.player;\r\n\r\n\r\nimport main.java.org.entities.villain.Villain;\r\nimport main.java.org.game.Audio.AudioManager;\r\nimport main.java.org.game.Audio.Sound;\r\nimport main.java.org.game.Graphics.*;\r\n\r\nimport main.java.org.entities.Entity;\r\n\r\nimport main.java.org.game.Isten;\r\nimport main.java.org.game.Map.RoomType;\r\nimport main.java.org.game.UI.TimeCounter;\r\nimport main.java.org.game.physics.Collider;\r\nimport main.java.org.items.Item;\r\nimport main.java.org.items.usable_items.Gasmask;\r\nimport main.java.org.linalg.Vec2;\r\nimport main.java.org.networking.Packet03Animation;\r\nimport main.java.org.game.Map.Room;\r\nimport main.java.org.game.Map.UnitRoom;\r\nimport main.java.org.game.PlayerPrefs.PlayerPrefs;\r\nimport main.java.org.game.updatable.Updatable;\r\n\r\nimport java.awt.event.KeyEvent;\r\nimport java.util.ArrayList;\r\n\r\n/**\r\n * The player class, makes almost everything related to the player.\r\n */\r\npublic class Player extends Entity {\r\n\r\n    Collider playerCollider;\r\n    ArrayList<Image> playerImage;\r\n    ImageUI death;\r\n    int activeImage;\r\n    TextUI motivational;\r\n    float time;\r\n    Text playerName;\r\n    boolean alive;  //Bool variable, to store status of player: ded or alive\r\n    Sound playerSound = null;\r\n    double faintingTime;\r\n    boolean isFainted;\r\n    boolean isInGasRoomButHasMask;\r\n    float speed;\r\n    protected Vec2 spawnPosition;\r\n    protected int run = 1;\r\n    protected int skinID;\r\n    public boolean localPlayer = false;\r\n    public Room currentRoom = null;\r\n    private boolean isInGasRoom = false;\r\n    private boolean changedRoom = false;\r\n\r\n    public Player() {\r\n        playerCollider = null;\r\n        playerImage = null;\r\n        death = null;\r\n        motivational = null;\r\n        activeImage = 0;\r\n        time = 0.0f;\r\n        playerName = new Text(PlayerPrefs.getString(\"name\"), new Vec2(0, 0), \"./assets/Bavarian.otf\", 15, 0, 0, 255);\r\n        playerName.setShadowOn(false);\r\n        alive = true;\r\n        spawnPosition = new Vec2(0, 0);\r\n        faintingTime = 0;\r\n        isFainted = false;\r\n        isInGasRoomButHasMask = false;\r\n        speed=2;\r\n    }\r\n\r\n    public Player(String name) {\r\n        playerCollider = null;\r\n        playerImage = null;\r\n        death = null;\r\n        activeImage = 0;\r\n        motivational = null;\r\n        time = 0.0f;\r\n        playerName = new Text(name, new Vec2(0, 0), \"./assets/Monocraft.ttf\", 15, 0, 0, 255);\r\n        playerName.setShadowOn(false);\r\n        alive = true;\r\n        spawnPosition = new Vec2(0, 0);\r\n        faintingTime = 0;\r\n        isFainted = false;\r\n        speed=2;\r\n    }\r\n\r\n    public Player(String name, Vec2 spawnPosition) {\r\n        this(name);\r\n        this.spawnPosition.x = spawnPosition.x;\r\n        this.spawnPosition.y = spawnPosition.y;\r\n    }\r\n\r\n    @Override\r\n    public void onStart(Isten isten) {\r\n        //called when the player is initialized\r\n\r\n        Vec2 playerScale = new Vec2(0.5f, 0.5f);\r\n        Vec2 faintedScale = new Vec2(0.6f, 0.6f);\r\n\r\n        playerCollider = new Collider(new Vec2(spawnPosition.x, spawnPosition.y), playerScale);\r\n        playerCollider.setMovability(true);\r\n        isten.getPhysicsEngine().addCollider(playerCollider);//register collider in the physics engine\r\n\r\n        playerImage = new ArrayList<>();\r\n        playerImage.add(new Image(new Vec2(), playerScale, \"./assets/character/character\" + skinID + \"_right1.png\"));\r\n        playerImage.add(new Image(new Vec2(), playerScale, \"./assets/character/character\" + skinID + \"_right2.png\"));\r\n        playerImage.add(new Image(new Vec2(), playerScale, \"./assets/character/character\" + skinID + \"_left1.png\"));\r\n        playerImage.add(new Image(new Vec2(), playerScale, \"./assets/character/character\" + skinID + \"_left2.png\"));\r\n        playerImage.add(new Image(new Vec2(), faintedScale, \"./assets/character/character\" + skinID + \"_right1_fainted.png\"));\r\n        playerImage.add(new Image(new Vec2(), faintedScale, \"./assets/character/character\" + skinID + \"_right2_fainted1.png\"));\r\n        playerImage.add(new Image(new Vec2(), faintedScale, \"./assets/character/character\" + skinID + \"_left1_fainted.png\"));\r\n        playerImage.add(new Image(new Vec2(), faintedScale, \"./assets/character/character\" + skinID + \"_left2_fainted1.png\"));\r\n        playerImage.add(new Image(new Vec2(), faintedScale, \"./assets/character/character\" + skinID + \"_right2_fainted2.png\"));\r\n        playerImage.add(new Image(new Vec2(), faintedScale, \"./assets/character/character\" + skinID + \"_left2_fainted2.png\"));\r\n        playerImage.add(new Image(new Vec2(), faintedScale, \"./assets/character/character\" + skinID + \"_right1_mask.png\"));\r\n        playerImage.add(new Image(new Vec2(), faintedScale, \"./assets/character/character\" + skinID + \"_right2_mask.png\"));\r\n        playerImage.add(new Image(new Vec2(), faintedScale, \"./assets/character/character\" + skinID + \"_left1_mask.png\"));\r\n        playerImage.add(new Image(new Vec2(), faintedScale, \"./assets/character/character\" + skinID + \"_left2_mask.png\"));\r\n        playerImage.add(new Image(new Vec2(), playerScale, \"./assets/character/character\" + skinID + \"_ded.png\"));\r\n\r\n        for (Image im : playerImage) {\r\n            im.setSortingLayer(-69);\r\n            im.setVisibility(false);\r\n            isten.getRenderer().addRenderable(im);//register images in the renderer\r\n        }\r\n        playerImage.get(playerImage.size() - 1).setSortingLayer(-67);\r\n\r\n        activeImage = 1;\r\n        playerImage.get(activeImage).setVisibility(true);\r\n\r\n        death = new ImageUI(new Vec2(spawnPosition.x, spawnPosition.y), new Vec2(isten.getRenderer().getWidth(), isten.getRenderer().getHeight()), \"./assets/character/ded.png\");\r\n        death.setSortingLayer(-70);\r\n        death.setVisibility(false);\r\n        death.setAlignment(Renderable.CENTER, Renderable.CENTER);\r\n        isten.getRenderer().addRenderable(death);\r\n\r\n        motivational = new TextUI(\"Try again loser.\", new Vec2(0, -170), 26, 200, 200, 200);\r\n        motivational.setSortingLayer(-71);\r\n        motivational.setVisibility(false);\r\n        motivational.setAlignment(Renderable.CENTER, Renderable.CENTER);\r\n        isten.getRenderer().addRenderable(motivational);\r\n\r\n        if (playerName != null) {\r\n            playerName.setVisibility(true);\r\n            playerName.setSortingLayer(-69);\r\n            isten.getRenderer().addRenderable(playerName);\r\n        }\r\n\r\n        //adjust camera zoom\r\n        isten.getCamera().setPixelsPerUnit(100);\r\n\r\n        //preload player sound\r\n        AudioManager.preloadSound(\"./assets/audio/playersound.ogg\");\r\n        AudioManager.preloadSound(\"./assets/audio/died.ogg\");\r\n    }\r\n\r\n    @Override\r\n    public void onUpdate(Isten isten, double deltaTime) {\r\n        //called every frame\r\n        if (alive) {\r\n\r\n            if (isFainted) {\r\n                if (faintingTime > 10) {\r\n                    faintingTime = 0;\r\n                    isFainted = false;\r\n                    speed = 2;\r\n                }\r\n            }\r\n\r\n            //Room currentRoom = getPlayerRoom(isten,playerCollider.getPosition());\r\n            if(changedRoom) {\r\n                //beallitani a playerCountjat a szobanak:: (akar kiszervezheto fv-be)\r\n\r\n                //Lasd Inventory canAvoidVillain member var\r\n                isten.getInventory().setCanAvoidVillain(false);\r\n                //Ha szobat valt a player, akkor a kovetkezo alkalommar, amikor gegnerrel talalkozik hasznalodnia kell a Tvsz-nek\r\n                isten.getInventory().resetShouldUseChargeForTvsz();\r\n                changedRoom = false;\r\n            }\r\n            if (isInGasRoom) {\r\n                isInGasRoom = false;\r\n                if (!isten.getInventory().getExistenceOfGasMask()) {\r\n                    faintingTime = 0;\r\n                    isFainted = true;\r\n                    speed = 1;\r\n                    if(localPlayer) {\r\n                        for (int i = 0; i < 5; i++) {\r\n                            if (isten.getInventory().getStoredItems().get(i) != null) {\r\n                                //TODO\r\n                                // Should send item dropped to all clients.\r\n                                // When on client, throws nullpointer exception\r\n                                if(isten.getSocketServer() != null) isten.getInventory().getStoredItems().get(i).dropOnGround(new Vec2(currentRoom.getUnitRooms().get(i + 1).getPosition().x, currentRoom.getUnitRooms().get(i + 1).getPosition().y));\r\n                            }\r\n                        }\r\n                        isten.getInventory().dropAllItems(isten);\r\n                    }\r\n\r\n                    isInGasRoomButHasMask = false;\r\n                }\r\n                else {\r\n                    int index=0;\r\n                    for(;index<isten.getInventory().getSize();index++){\r\n                        if(isten.getInventory().getStoredItems().get(index) instanceof Gasmask) break;\r\n                    }\r\n                    isInGasRoomButHasMask = true;\r\n                    isten.getInventory().getStoredItems().get(index).use(deltaTime);\r\n                }\r\n            } else {\r\n                faintingTime += deltaTime;\r\n                isInGasRoomButHasMask = false;\r\n            }\r\n\r\n            //move the character\r\n            run = 1;\r\n            boolean w = isten.getInputHandler().isKeyDown(KeyEvent.VK_W);\r\n            boolean a = isten.getInputHandler().isKeyDown(KeyEvent.VK_A);\r\n            boolean s = isten.getInputHandler().isKeyDown(KeyEvent.VK_S);\r\n            boolean d = isten.getInputHandler().isKeyDown(KeyEvent.VK_D);\r\n\r\n            if (isten.getInputHandler().isKeyDown(KeyEvent.VK_SHIFT) && !isFainted) run *= 2;//Shift is run\r\n\r\n            if (localPlayer) {\r\n                if (w) {\r\n                    playerCollider.getVelocity().y = 2 * run;\r\n                } else if (!w) playerCollider.getVelocity().y = 0;\r\n                if (a) {\r\n                    playerCollider.getVelocity().x = -2 * run;\r\n                } else if (!a) playerCollider.getVelocity().x = 0;\r\n                if (s) {\r\n                    playerCollider.getVelocity().y = -2 * run;\r\n                } else if (!s && !w) playerCollider.getVelocity().y = 0;\r\n                if (d) {\r\n                    playerCollider.getVelocity().x = 2 * run;\r\n                } else if (!d && !a) playerCollider.getVelocity().x = 0;\r\n            }\r\n            //animation\r\n\r\n            time += deltaTime;\r\n            if (time > 0.2f / run) { //after this much time does the animation changes\r\n                int prev = activeImage;\r\n                boolean leftFacing = prev > 1 && prev < 4 || prev > 5 && prev < 8 || prev > 11 && prev < 14;\r\n                if (isFainted && playerCollider.getVelocity().magnitude() == 0.0f) { //fainted animation\r\n                    if (leftFacing|| prev == 9) activeImage = 7;\r\n                    else activeImage = 5;\r\n                    if (prev == 5) activeImage = 8;\r\n                    if (prev == 7) activeImage = 9;\r\n                }\r\n                else if(isInGasRoomButHasMask){ //mask animation\r\n                    if (playerCollider.getVelocity().x > 0) activeImage = 10;\r\n                    else if (playerCollider.getVelocity().x < 0) activeImage = 12;\r\n                    else if (leftFacing) activeImage = 12;\r\n                    else activeImage = 10;\r\n                    if (prev % 2 == 0 || playerCollider.getVelocity().magnitude() == 0.0f) activeImage++;\r\n                }\r\n                else { //normal animation\r\n                    if (playerCollider.getVelocity().x > 0) activeImage = 0;\r\n                    else if (playerCollider.getVelocity().x < 0) activeImage = 2;\r\n                    else if (leftFacing) activeImage = 2;\r\n                    else activeImage = 0;\r\n                    if (prev % 2 == 0 || playerCollider.getVelocity().magnitude() == 0.0f) activeImage++;\r\n                    if (isFainted) activeImage += 4;\r\n                }\r\n                playerImage.get(prev).setVisibility(false);\r\n                playerImage.get(activeImage).setVisibility(true);\r\n                time = 0.0f;\r\n                sendAnimationData(isten);\r\n            }\r\n\r\n            //move image\r\n            //the origin of the image is in its top right corner, therefore the imagePos looks like this: screenSpace(collider position) - 0.5*imageScale\r\n\r\n            Vec2 playerPosition = playerCollider.getPosition();\r\n            for (int i = 0; i < playerImage.size(); i++) {\r\n                playerImage.get(i).setPosition(playerPosition);\r\n            }\r\n            playerName.setPosition(Vec2.sum(playerPosition, new Vec2(0, (float) 0.5)));\r\n\r\n            //move camera\r\n            if (localPlayer) isten.getCamera().setPosition(playerCollider.getPosition());\r\n\r\n            //play sound\r\n            if (!AudioManager.isPlaying(playerSound) && localPlayer)\r\n                playerSound = AudioManager.playSound(\"./assets/audio/playersound.ogg\");\r\n\r\n            if (TimeCounter.getTimeRemaining() < 0 && alive) {\r\n                alive = false;\r\n                AudioManager.closeSound(playerSound);\r\n            }\r\n\r\n        }\r\n        else {\r\n\r\n            if (!AudioManager.isPlaying(playerSound) && localPlayer)\r\n                playerSound = AudioManager.playSound(\"./assets/audio/died.ogg\");\r\n\r\n            if (activeImage != 14) {\r\n                playerCollider.setVelocity(new Vec2(0));\r\n                playerImage.get(activeImage).setVisibility(false);\r\n                activeImage = 14;\r\n                playerImage.get(activeImage).setVisibility(true);\r\n                if (localPlayer) {\r\n                    death.setVisibility(true);\r\n                    motivational.setVisibility(true);\r\n                }\r\n            }\r\n        }\r\n        death.setScale(new Vec2(isten.getRenderer().getWidth(), isten.getRenderer().getHeight()));\r\n    }\r\n\r\n    public boolean checkIfPlayerInVillainRoom(Isten isten,double deltaTime) {\r\n        for (Updatable u : isten.getUpdatables()) {\r\n            if (u.getClass().equals(Villain.class)) {\r\n                Villain villain = (Villain) u;\r\n                if ((currentRoom != null && currentRoom.equals(villain.getRoom())) && currentRoom.getRoomType() != RoomType.GAS&&!villain.getIsFainted()) {\r\n                   //Ha van akkora szerencsenk, hogy van item nalunk, ami megmentene megse halunk meg\r\n                    if(!isten.getInventory().avoidVillain(deltaTime)){\r\n                        if (localPlayer && playerSound != null)\r\n                            AudioManager.closeSound(playerSound);\r\n                        return true;\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //kiszerveztem a fenti fv-t, mert nekem is kellett, és máshol később is hasznos lehet, ha kell, unitRoomra is ki lehetne szervezni\r\n    public Room getPlayerRoom(Isten isten, Vec2 playerPos){\r\n        /*UnitRoom[][] unitRooms= isten.getMap().getUnitRooms();\r\n        for(int i = 0; i < unitRooms.length;i++){\r\n            for(int j = 0; j<unitRooms[i].length;j++){\r\n                if (playerPos.x >= unitRooms[i][j].getPosition().x - 0.5 &&\r\n                        playerPos.x <= unitRooms[i][j].getPosition().x + 0.5 &&\r\n                        playerPos.y >= unitRooms[i][j].getPosition().y - 0.5 &&\r\n                        playerPos.y <= unitRooms[i][j].getPosition().y + 0.5)\r\n                {\r\n                    return unitRooms[i][j].getOwnerRoom();\r\n                }\r\n            }\r\n        }\r\n        return null;*/\r\n       ///efffektivebb megoldas\r\n        int x = (int)(playerPos.x + 0.5f);\r\n        int y = (int)(playerPos.y + 0.5f);\r\n        //System.out.println(x + \" \" + y + \" ownerroorm pozi \" +  isten.getMap().getUnitRooms()[y][x].getColNum() + \" \" + isten.getMap().getUnitRooms()[y][x].getRowNum());\r\n        return isten.getMap().getUnitRooms()[y][x].getOwnerRoom();\r\n\r\n    }\r\n    @Override\r\n    public void onDestroy() {\r\n        //not implemented yet\r\n    }\r\n    public Room getCurrentRoom() {\r\n        return currentRoom;\r\n    }\r\n\r\n    public void setAlive(boolean alive) {\r\n        this.alive = alive;\r\n    }\r\n\r\n    public boolean isAlive() {\r\n        return alive;\r\n    }\r\n\r\n    public void setPlayerName(Text playerName) {\r\n        this.playerName = playerName;\r\n    }\r\n\r\n    public Collider getPlayerCollider() {\r\n        return playerCollider;\r\n    }\r\n\r\n    public ArrayList<Image> getPlayerImage() {\r\n        return playerImage;\r\n    }\r\n\r\n    public float getTime() {\r\n        return time;\r\n    }\r\n\r\n    public int getActiveImage() {\r\n        return activeImage;\r\n    }\r\n\r\n    public Text getPlayerName() {\r\n        return playerName;\r\n    }\r\n\r\n    public void setPlayerCollider(Collider collider) {\r\n        this.playerCollider = collider;\r\n    }\r\n\r\n    public void setActiveImage(int activeImage) {\r\n        this.activeImage = activeImage;\r\n    }\r\n\r\n    public void setTime(float time) {\r\n        this.time = time;\r\n    }\r\n\r\n    public void setPlayerImage(ArrayList<Image> playerImage) {\r\n        this.playerImage = playerImage;\r\n    }\r\n\r\n    //Needed for instant animation change\r\n    protected void sendAnimationData(Isten isten) {\r\n        //implemented in PlayerMP -> override\r\n    }\r\n\r\n    public void setSkinID(int skinID) {\r\n        this.skinID = skinID;\r\n    }\r\n\r\n    public int getSkinID() {\r\n        return skinID;\r\n    }\r\n\r\n    public boolean isFainted() {\r\n        return isFainted;\r\n    }\r\n    public void isInGasRoom(boolean b) {\r\n        isInGasRoom = b;\r\n    }\r\n\r\n    public boolean isInGasRoom() {\r\n        return isInGasRoom;\r\n    }\r\n\r\n    public void changedRoom(boolean b) {\r\n        changedRoom = b;\r\n    }\r\n\r\n    public void setCurrentRoom(Room currentRoom) {\r\n        this.currentRoom = currentRoom;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/entities/player/Player.java b/src/main/java/org/entities/player/Player.java
--- a/src/main/java/org/entities/player/Player.java	(revision 42cd3da3dc3e824548fd3b0b3d216aab45729bda)
+++ b/src/main/java/org/entities/player/Player.java	(date 1715323193325)
@@ -20,6 +20,7 @@
 import main.java.org.game.Map.UnitRoom;
 import main.java.org.game.PlayerPrefs.PlayerPrefs;
 import main.java.org.game.updatable.Updatable;
+import main.java.org.networking.Packet25PlayerForDoorOpen;
 
 import java.awt.event.KeyEvent;
 import java.util.ArrayList;
@@ -166,6 +167,12 @@
                 }
             }
 
+            //check if door is opened by player
+            if(isten.getInputHandler().isKeyReleased(KeyEvent.VK_O)) {
+                Packet25PlayerForDoorOpen packet = new Packet25PlayerForDoorOpen(isten.getPlayer().getPlayerName().getText());
+                packet.writeData(isten.getSocketClient());
+            }
+
             //Room currentRoom = getPlayerRoom(isten,playerCollider.getPosition());
             if(changedRoom) {
                 //beallitani a playerCountjat a szobanak:: (akar kiszervezheto fv-be)
Index: src/main/java/org/networking/ClientMap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main.java.org.networking;\r\n\r\nimport main.java.org.game.Isten;\r\nimport main.java.org.game.Map.EdgeBetweenRooms;\r\nimport main.java.org.game.Map.EdgePiece;\r\nimport main.java.org.game.updatable.Updatable;\r\n\r\nimport java.awt.event.KeyEvent;\r\n\r\npublic class ClientMap extends Updatable {\r\n\r\n    private EdgeBetweenRooms edgeBetweenRooms;\r\n    private Isten isten;\r\n    public static int mapWidth;\r\n    public static int mapHeight;\r\n\r\n    public void addEdgePiece(EdgePiece edgePiece) {\r\n        edgeBetweenRooms.getWalls().add(edgePiece);\r\n    }\r\n    @Override\r\n    public void onStart(Isten isten) {\r\n        this.isten = isten;\r\n        ClientMap.mapWidth = isten.getMap().getMapColumnSize();\r\n        ClientMap.mapHeight = isten.getMap().getMapRowSize();\r\n        edgeBetweenRooms = new EdgeBetweenRooms();\r\n        isten.getPhysicsEngine().addColliderGroup(edgeBetweenRooms.getColliderGroup());\r\n    }\r\n\r\n    @Override\r\n    public void onUpdate(Isten isten, double deltaTime) {\r\n        //check if door is opened by player\r\n        if(isten.getInputHandler().isKeyReleased(KeyEvent.VK_O)) {\r\n            Packet25PlayerForDoorOpen packet = new Packet25PlayerForDoorOpen(isten.getPlayer().getPlayerName().getText());\r\n            packet.writeData(isten.getSocketClient());\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onDestroy() {\r\n\r\n    }\r\n\r\n    public EdgeBetweenRooms getEdgeBetweenRooms() {\r\n        return edgeBetweenRooms;\r\n    }\r\n\r\n    public void removeEdgePiece(EdgePiece piece) {\r\n        //isten.getRenderer().deleteRenderable(piece.getImage());\r\n        //edgeBetweenRooms.getColliderGroup().removeCollider(piece.getCollider());\r\n        piece.removeEdgePieceOnClient(isten, edgeBetweenRooms);\r\n        edgeBetweenRooms.getWalls().remove(piece);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/networking/ClientMap.java b/src/main/java/org/networking/ClientMap.java
--- a/src/main/java/org/networking/ClientMap.java	(revision 42cd3da3dc3e824548fd3b0b3d216aab45729bda)
+++ b/src/main/java/org/networking/ClientMap.java	(date 1715323193310)
@@ -28,11 +28,7 @@
 
     @Override
     public void onUpdate(Isten isten, double deltaTime) {
-        //check if door is opened by player
-        if(isten.getInputHandler().isKeyReleased(KeyEvent.VK_O)) {
-            Packet25PlayerForDoorOpen packet = new Packet25PlayerForDoorOpen(isten.getPlayer().getPlayerName().getText());
-            packet.writeData(isten.getSocketClient());
-        }
+
     }
 
     @Override
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"3506ab6d-0407-47f2-a7e8-78ebc867e577\" name=\"Changes\" comment=\"it's working\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/networking/Packet28PlayerChangedRoom.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/entities/player/Player.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/entities/player/Player.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/game/Isten.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/game/Isten.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/game/Map/Door.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/game/Map/Door.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/game/Map/EdgeManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/game/Map/EdgeManager.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/game/Map/Map.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/game/Map/Map.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/networking/ClientMap.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/networking/ClientMap.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/networking/ClientPacketSender.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/networking/ClientPacketSender.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/networking/GameClient.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/networking/GameClient.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/networking/GameServer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/networking/GameServer.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/networking/HandlerManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/networking/HandlerManager.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/networking/MapHandler.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/networking/MapHandler.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/networking/Packet.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/networking/Packet.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/networking/Packet25PlayerPosForDoorOpen.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/networking/Packet25PlayerForDoorOpen.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/networking/PlayerStatusHandler.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/networking/PlayerStatusHandler.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$\">\r\n          <activation />\r\n        </task>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand />\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"HARD\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2frbzqFlsraLkUjUjuqMYUBt0BV\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\r\n    &quot;Gradle.MultiplayerTester.executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.MultiplayerTester.testPacket01.executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.MultiplayerTester.testPacket02Constructor.executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.iLaby [:Main.main()].executor&quot;: &quot;Run&quot;,\r\n    &quot;Gradle.iLaby [run].executor&quot;: &quot;Run&quot;,\r\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/kuruc/Downloads/junit-4.13.2.jar&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.gradle&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"Gradle.iLaby [run]\">\r\n    <configuration name=\"MultiplayerTester\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":test\" />\r\n            <option value=\"--tests\" />\r\n            <option value=\"&quot;MultiplayerTester&quot;\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>true</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"MultiplayerTester.testPacket01\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":test\" />\r\n            <option value=\"--tests\" />\r\n            <option value=\"&quot;MultiplayerTester.testPacket01&quot;\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>true</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"MultiplayerTester.testPacket02Constructor\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\":test\" />\r\n            <option value=\"--tests\" />\r\n            <option value=\"&quot;MultiplayerTester.testPacket02Constructor&quot;\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>true</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"iLaby [run]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" singleton=\"false\" nameIsGenerated=\"true\">\r\n      <ExternalSystemSettings>\r\n        <option name=\"executionName\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\r\n        <option name=\"scriptParameters\" value=\"--scan\" />\r\n        <option name=\"taskDescriptions\">\r\n          <list />\r\n        </option>\r\n        <option name=\"taskNames\">\r\n          <list>\r\n            <option value=\"run\" />\r\n          </list>\r\n        </option>\r\n        <option name=\"vmOptions\" />\r\n      </ExternalSystemSettings>\r\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\r\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\r\n      <DebugAllEnabled>false</DebugAllEnabled>\r\n      <RunAsTest>false</RunAsTest>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Gradle.iLaby [run]\" />\r\n      <item itemvalue=\"Gradle.MultiplayerTester\" />\r\n      <item itemvalue=\"Gradle.MultiplayerTester.testPacket02Constructor\" />\r\n      <item itemvalue=\"Gradle.MultiplayerTester.testPacket01\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Gradle.MultiplayerTester.testPacket01\" />\r\n        <item itemvalue=\"Gradle.MultiplayerTester.testPacket02Constructor\" />\r\n        <item itemvalue=\"Gradle.MultiplayerTester\" />\r\n        <item itemvalue=\"Gradle.MultiplayerTester\" />\r\n        <item itemvalue=\"Gradle.MultiplayerTester.testPacket02Constructor\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-18.0.2-corretto-18.0.2-4caba194b151-5720f15e\" />\r\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"3506ab6d-0407-47f2-a7e8-78ebc867e577\" name=\"Changes\" comment=\"\" />\r\n      <created>1714562409879</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1714562409879</updated>\r\n      <workItem from=\"1714562410886\" duration=\"908000\" />\r\n      <workItem from=\"1714687853059\" duration=\"1015000\" />\r\n      <workItem from=\"1714731678095\" duration=\"398000\" />\r\n      <workItem from=\"1714740938116\" duration=\"2592000\" />\r\n      <workItem from=\"1714743658125\" duration=\"732000\" />\r\n      <workItem from=\"1714747759256\" duration=\"7383000\" />\r\n      <workItem from=\"1714847163651\" duration=\"324000\" />\r\n      <workItem from=\"1714924570656\" duration=\"7744000\" />\r\n      <workItem from=\"1715002935390\" duration=\"1974000\" />\r\n      <workItem from=\"1715102723676\" duration=\"14303000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"it's working\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1714665384490</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714665384490</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"it's working\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"it's working\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 42cd3da3dc3e824548fd3b0b3d216aab45729bda)
+++ b/.idea/workspace.xml	(date 1715323193703)
@@ -5,22 +5,8 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="3506ab6d-0407-47f2-a7e8-78ebc867e577" name="Changes" comment="it's working">
-      <change afterPath="$PROJECT_DIR$/src/main/java/org/networking/Packet28PlayerChangedRoom.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/entities/player/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/entities/player/Player.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/game/Isten.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/game/Isten.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/game/Map/Door.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/game/Map/Door.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/game/Map/EdgeManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/game/Map/EdgeManager.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/game/Map/Map.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/game/Map/Map.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/networking/ClientMap.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/networking/ClientMap.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/networking/ClientPacketSender.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/networking/ClientPacketSender.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/networking/GameClient.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/networking/GameClient.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/networking/GameServer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/networking/GameServer.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/networking/HandlerManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/networking/HandlerManager.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/networking/MapHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/networking/MapHandler.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/networking/Packet.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/networking/Packet.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/networking/Packet25PlayerPosForDoorOpen.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/networking/Packet25PlayerForDoorOpen.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/networking/PlayerStatusHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/networking/PlayerStatusHandler.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
